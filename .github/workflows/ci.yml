# with help from https://github.com/orogene/orogene/blob/main/.github/workflows/ci.yml

name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  fmt_and_doc:
    name: Cargo fmt & doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Cache docs cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/crates.toml
            ~/.cargo/crates2.json
            ~/.package-cache
            ~/.cargo/bin/
            ~/.cargo/binstall/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-docs-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - name: rustfmt
        run: cargo fmt --all -- --check
      - name: docs
        run: cargo doc --no-deps

  build_and_test:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable]
        # os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v1

      - name: Cache build cargo dependencies on ${{ matrix.os }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-build-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: wasm32-unknown-unknown
          components: clippy
          override: true
      - name: Clippy
        run: cargo clippy --all -- -D warnings
      - name: Run tests
        run: cargo test --all --verbose

  minimal_versions:
    name: Minimal versions check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v1

      - name: Cache minimal-versions cargo dependencies on ${{ matrix.os }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-minimal-versions-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Run minimal version build
        run: cargo build --all -Z minimal-versions --all-features
