@top Template { block }

@precedence {}

block[@isGroup=Block] {
  BlockList |
  blockExpression { expression lineEnd } |
  BlockWrap { endOfLine indent block dedentEnd }
//  BlockObject |
//  BlockFunction |
//  BlockCall |
//  BlockLet |
//  BlockIf
}

BlockList { blockListItem+ }
blockListItem { listItemMarker block dedentEnd }

//BlockObject

expression[@isGroup=Expression] {
  Null |
  Boolean |
  String |
  Number
}

@skip {
  spaces |
  LineComment |
  blankLineStart (spaces | LineComment)* lineEnd
}

lineEnd { endOfLine | endOfFile }
dedentEnd { dedent | endOfFile }

@context trackIndent from "./tokens.js"

@external tokens lines from "./tokens.js" {
  indent
  dedent
  blankLineStart
  listItemMarker
}

@tokens {
  spaces { $[ ]+ }
  endOfLine { $[\r\n] }
  endOfFile { @eof }

  Null { "null" }
  Boolean { "false" | "true" }

  String { '"' (!["\\] | "\\" _)* '"' }

  Number {
    (@digit ("_" | @digit)* ("." @digit ("_" | @digit)*)? | "." @digit ("_" | @digit)*)
      ($[eE] $[+\-]? @digit ("_" | @digit)*)? $[jJ]? |
    "0" $[bB] $[_01]+ |
    "0" $[oO] $[_0-7]+ |
    "0" $[xX] $[_0-9a-fA-F]+
  }
//!  @precedence { Number "." }

  Identifier { $[a-zA-Z_] $[a-zA-Z0-9_]* }

  "(" ")"
  "[" "]"
  "{" "}"

  "if" "then" "else"
  "let" "in"
  "=>"[@name=FatArrow]

  ArithmeticOp<expr> { expr }
  LogicOp<expr> { expr }
  CompareOp<expr> { expr }

  LineComment { "#" ![\n\r]* }
}
