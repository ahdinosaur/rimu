// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
import {newlines, indentation, listItemMarkers, trackIndent} from "./tokens.js"
const spec_identifier = {__proto__:null,null:20, true:24, false:26, let:92, in:98, if:102, then:104, else:106}
export const parser = LRParser.deserialize({
  version: 14,
  states: "2SO]Q]OOP!^OPOOO]Q]O'#DvOOQV'#De'#DeO!cQ_O'#C_OOQP'#Cc'#CcO#uQaO'#CbO#|QaO'#CbO$TQXO'#CaOOQR'#Df'#DfO$YQZO'#C`O%fQXO'#CmO%mQXO'#CpO%tQXO'#CsO&PQXO'#CuO&vQaO1G.{O$qQXO'#C{OOQP'#Dz'#DzO'QQZO'#DWOOQR'#Du'#DuQOQXOOOOQP'#Ce'#CeOOQP'#Cg'#CgO'VQXO'#DZO]Q]O'#D`P'[OXO)C?hO'jQZO,5:bOOQV-E7c-E7cO'rQZO,59tO]Q]O,58{OOQP'#Cb'#CbOOQR-E7d-E7dO'wQaO,59XO(OQaO'#EOO(yQXO,59bO)OQXO'#CuO)TQaO'#D{O)bQXO,59[O)gQXO'#CtO)lQXO'#D}O)tQXO,59_O]Q]O,59aOOQR'#Dt'#DtO)yQXO'#CyOOQP,59d,59dO!XQXO,59fO*QQXO,59fO$qQXO,59jO$qQXO,59jO$qQXO,59jO$qQXO,59jO$qQXO,59jO$qQXO,59jO$qQXO,59jOOQR,5:a,5:aO*XQaO,59gO]Q]O,59rO*rQZO,59uO*wQZO,59zPOOP'#Dd'#DdP'[OXO/'5SPOOO/'5S/'5SOOQV'#Dw'#DwOOQV1G/|1G/|O]Q]O1G/`OOQR1G.g1G.gOOQP1G.s1G.sO+`QXO'#DiO+kQXO,5:jOOQP1G.|1G.|O$qQXO,59aO+sQXO'#DgO,QQXO,5:gOOQP1G.v1G.vO$qQXO,59`O,]QXO'#DhO,kQXO,5:iOOQP1G.y1G.yOOQR1G/_1G/_O,sQXO,59eOOQP1G/Q1G/QO,xQaO1G/QO-SQXO1G/QO._QaO1G/UO.fQaO1G/UO/qQaO1G/UO/xQaO1G/UO1TQaO1G/UO1[QaO1G/UO2QQaO1G/UO'jQZO1G/^O2nQZO1G/aO]Q]O1G/fO]Q]O1G/fPOOP-E7b-E7bPOOO49*n49*nO'jQZO7+$zOOQP,5:T,5:TOOQP-E7g-E7gO2yQaO1G.{O3dQaO,5:ROOQP-E7e-E7eO3qQaO1G.zOOQP,5:S,5:SOOQP-E7f-E7fOOQP1G/P1G/POOQP7+$l7+$lO3{QXO7+$lO4SQaO7+$lOOQR7+$x7+$xOOQP'#D^'#D^O4ZQXO'#D]OOQR'#Dj'#DjO4`QZO7+${O4kQXO7+${OOQR7+%Q7+%QO4pQZO7+%QOOQR<<Hf<<HfO5XQaO<<HWOOQP<<HW<<HWO]Q]O,59wOOQR-E7h-E7hO5`QXO<<HgO]Q]O<<HgO]Q]O<<HlOOQPAN=rAN=rOOQR1G/c1G/cO]Q]OAN>ROOQRAN>RAN>ROOQRAN>WAN>WOOQRG23mG23m",
  stateData: "5e~O!gOSPOS!bPQ~OWVOYeO[fO]fO^aO`ZOc[Of]Op`Oq`O!OgO!ThO!`bO!eQO!lTO~O!biO~O!eQO!_RX!aRX!dRX!URX!VRXWRX!lRX~O`!nXc!nXs!nXt!nXu!nXv!nXw!nXx!nXy!nX!a!nX!mUX!s!nX~O!`lO~P!}O!`!nX~P!}O!mmO~OWnO!lTO!_SX!aSX!dSX!USX!VSX~OWaOYeO[fO]fO^aO`ZOc[Of]Op`Oq`O!lTO~O_!rP~P$qOb!oP~P$qOWnO!lTOe!qP~OkyO~O`{Oc!OOs!POt!QOu!ROv!SOw!TOx!UOy!VO!s}O~O!`zO!azO~P&UO!c!YO~O!`!ZO~OP!]O!`zO!azO!g!]O~O!a!`O!d!`O~O!c!bO~O_!dO~P&UO!p!eO_!nX_!rX`!nXc!nXs!nXt!nXu!nXv!nXw!nXx!nXy!nX!s!nX~O_!gO~Ok!hO~O!p!iOb!oX_!oX~P&UOb!kO~O!m!lO~O!p!mOe!qX~Oe!oO~O_!oP~P$qO!m!tO~P$qO!`oa!aoa_oaboa!poa!moaeoa~P&UO!c!}O~O!U#PO!V#OO!_!Sa!a!Sa!d!SaW!Sa!l!Sa~O!lTO_!]X!p!]X~O!p!eO_!ra~Ob!ZX!p!ZX_!ZX~P$qO!p!iOb!oa_!oa~OWnO!lTOe![X!p![X~O!p!mOe!qa~O_#]O~Ob#^O!m#_O~P&UOb#^O~P$qO`{Oc!OO!s}Otriurivriwrixriyri!`ri!ari_ribri!pri!mrieri~Osri~P-ZOs!PO~P-ZO`{Oc!OOs!POt!QO!s}Ovriwrixriyri!`ri!ari_ribri!pri!mrieri~Ouri~P.mOu!RO~P.mO`{Oc!OOs!POt!QOu!ROv!SO!s}Oxriyri!`ri!ari_ribri!pri!mrieri~Owri~P0POw!TO~P0PO`{Oc!OOs!POt!QOu!ROv!SOw!TOx!UO!s}O~Oyri!`ri!ari_ribri!pri!mrieri~P1cOW#bO!d#fO!lTO~O_iibii!pii!`ii!aii!miieii~P&UOb!Za!p!Za_!Za~P&UOehi!phi~P&UOb#kO~P$qOb#kO~P&UO!m#lO~OW#bO!d#nO!lTO~O!R#oO~O!V#pO!_!Sq!a!Sq!d!Sq!U!SqW!Sq!l!Sq~Ob#qO~P&UO!R#sO~O",
  goto: "+v!sPPP!t!t#T#e#yP%OP%OPPPPP%OPP%OPP%O%p%O%vP%O&j%O%OPP%OPPPPPPP!t!t!t!tP&}'RP!tPPP'V']'o(R(X(_(ePPPPPPPPP(k(t)m)}PP*W+jP+p+skcOQhmy!Y!b#O#P#l#o#p#smXOQYhmy!Y!b#O#P#l#o#p#slWOQYhmy!Y!b#O#P#l#o#p#sTv]!mjUOQhmy!Y!b#O#P#l#o#p#spa[`{!O!P!Q!R!S!T!U!V!h!i!l!t#_UnY]!mQqZQ!r}Q#T!eT#b!}#e!_aOQZ[`hmy{!O!P!Q!R!S!T!U!V!Y!b!h!i!l!t#O#P#_#l#o#p#sQw]R#Z!mj^OQhmy!Y!b#O#P#l#o#p#sssZ[`{!O!P!Q!R!S!T!U!V!h!i!l!t#_s|_pt!X!s!u!v!w!x!y!z!{#V#W#Y#`#jT#d!}#eT#c!}#eQ!^iR#Q!^jSOQhmy!Y!b#O#P#l#o#p#sRkSjYOQhmy!Y!b#O#P#l#o#p#sRoYQ!jtR#X!jQ!nwR#[!nQ!fqR#U!fQ#e!}R#m#eQ!W_Q!_iR#R!^QdOQjQQ![hQ!cmQ!pyQ!|!YQ#S!bQ#g#OQ#h#PQ#r#lQ#t#oQ#u#pR#v#smROQShmy!Y!b#O#P#l#o#p#sQ!ajQ#a!|R#i#Sj_OQhmy!Y!b#O#P#l#o#p#sQpZSt[{Q!X`Q!s!OQ!u!PQ!v!QQ!w!RQ!x!SQ!y!TQ!z!UQ!{!VQ#V!hQ#W!iQ#Y!lQ#`!tR#j#_Qu[R!q{Rx]RrZ",
  nodeNames: "âš  LineComment Template ListBlock ObjectBlock ObjectBlockEntry ObjectKey Identifier String Null null Boolean true false Number ) ( ParenthesizedExpression ] [ ListExpression } { ObjectExpression ObjectExpressionEntry FunctionExpression FunctionParams FatArrow CallExpression CallExpressionArgs GetExpression UnaryExpression ArithmeticOp LogicOp BinaryExpression ArithmeticOp ArithmeticOp CompareOp CompareOp CompareOp CompareOp CompareOp IndentedBlock FunctionBlock CallBlock LetBlock let LetBlockEntry LetKey in IfBlock if then else",
  maxTerm: 81,
  context: trackIndent,
  nodeProps: [
    ["group", -7,3,4,42,43,44,45,50,"Block",-13,7,8,9,11,14,17,20,23,25,28,30,31,34,"Block Expression"],
    ["openedBy", 15,"(",18,"[",21,"{"],
    ["closedBy", 16,")",19,"]",22,"}"]
  ],
  skippedNodes: [0,1,54],
  repeatNodeCount: 7,
  tokenData: "(|~Rlpq!yqr#Rrs#`st$|uv%hvw%mxy%xyz%}z{%h{|&S|}&X}!O&^!O!P&e!P!Q%h!Q![&j![!]'T!^!_'Y!_!`'g!`!a'Y!c!}'u!}#O(W#P#Q(]#Q#R(b#R#S'u#T#o'u#o#p(g#p#q(l#q#r(w~#OP!g~pq!yR#WPqP!_!`#ZQ#`OvQ~#cVOr#`rs#xs#O#`#O#P#}#P;'S#`;'S;=`$v<%lO#`~#}OW~~$QRO;'S#`;'S;=`$Z;=`O#`~$^WOr#`rs#xs#O#`#O#P#}#P;'S#`;'S;=`$v;=`<%l#`<%lO#`~$yP;=`<%l#`~%RTP~OY$|Z]$|^;'S$|;'S;=`%b<%lO$|~%eP;=`<%l$|~%mOs~~%pPvw%s~%xOx~~%}O`~~&SO_~Q&XOtQ~&^O!p~R&eOtQpP~&jO!s~~&oQ^~!O!P&u!Q![&j~&xP!Q![&{~'QP^~!Q![&{~'YO!m~~'_Pu~!_!`'b~'gOu~~'jQ!_!`#Z!`!a'p~'uOk~~'zS!l~!Q!['u!c!}'u#R#S'u#T#o'u~(]Oc~~(bOb~~(gOw~~(lOf~~(oP#p#q(r~(wOy~~(|Oe~",
  tokenizers: [newlines, indentation, listItemMarkers, 0, 1],
  topRules: {"Template":[0,2]},
  specialized: [{term: 74, get: (value) => spec_identifier[value] || -1}],
  tokenPrec: 0
})
